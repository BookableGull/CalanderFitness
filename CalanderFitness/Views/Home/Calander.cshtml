@{
    ViewBag.Title = "Calendar";
}

<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title</h2>
    <h3>@ViewBag.Message</h3>

    @{
        @*Here is where we get the information needed to make the calander, including getting the current day, month, and year*@
        @*Using that information, we can dynamically make the calander*@
        DateTime currentDate = DateTime.Now;
        int currentMonth = currentDate.Month;
        int currentYear = currentDate.Year;
        int daysInMonth = DateTime.DaysInMonth(currentYear, currentMonth);
        DateTime firstDayOfMonth = new DateTime(currentYear, currentMonth, 1);
        DayOfWeek firstDayOfWeek = firstDayOfMonth.DayOfWeek;
        int daysInPreviousMonth = DateTime.DaysInMonth(currentYear, currentMonth - 1);
        int currentDay = 1;
        int previousMonthDaysToShow = (int)firstDayOfWeek;
    }

    <style> /* Using this bit of CSS code, we can set the borders for of the calander */
        table {
            border-collapse: collapse;
        }

        th, td {
            border: 1px solid black;
            padding: 8px; /* Adjust padding as needed */
        }
    </style>

    <table>
        <tr> <!-- This is the header of the calander, where the days of the week will be displayed -->
            <th width="500px">Sunday</th>
            <th width="500px">Monday</th>
            <th width="500px">Tuesday</th>
            <th width="500px">Wednesday</th>
            <th width="500px">Thursday</th>
            <th width="500px">Friday</th>
            <th width="500px">Saturday</th>
        </tr>

        <tr>
            @for (int i = 0; i < (int)firstDayOfWeek; i++) // This is where we display the days of the previous month in case we have to
            {
                <td>@(daysInPreviousMonth - previousMonthDaysToShow + i + 1)</td>
            }
            @for (int i = (int)firstDayOfWeek; i < 7; i++) // This is where we display the days of the current month in the calander, specifically the first week
            {
                <td>@currentDay</td>
                currentDay++;
            }
        </tr>

        @while (currentDay <= daysInMonth) // This is where we display the rest of the days of the current month in the calander by incrementing the current day and checking if it is less than or equal to the days in the month
        {
            <tr>
                @for (int i = 0; i < 7 && currentDay <= daysInMonth; i++)
                {
                    <td>@currentDay</td>
                    currentDay++;
                }
            </tr>
        }
    </table>

    <p>Go Play Yakuza or Something.</p>
</main>
